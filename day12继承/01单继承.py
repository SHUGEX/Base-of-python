# 1. 理解面向对象概念，需求具体化，实例化，人，事物
# 2. a.定义类，b.通过类去创建对象
# class 类名（首字母大写）:
#     代码（属性和方法）

# 对象名 = 类名(实参)

# 3. 添加对象属性：对象名.属性名 = 值
# 4. init():设置对象初始属性值，带参数的init为了给不同的对象设置不同的属性值

# 新式类定义类，object本身也是一个类，并且是放在新式类中的顶级类，是所有的子类的父类
# class A(object):
    # 代码
    # pass                # 占位符本身是没有任何作用效果，只是占个位置不报错

# 程序中的继承：类和类之间的关系，父类继承给子类
# “作用”：节省代码量

# 单继承：指的是一个父类继承给一个子类
# 1. 定义师父类，定义属性和方法
class A(object):      # 父类
    def __init__(self):
        # 对象.属性名 = 值
        self.jishu = "摊煎饼果子的配方"

    def info_print(self):
        print(f"使用{self.jishu}摊煎饼果子")

# 2. 定义徒弟类
class B(A):         # B(A)就是徒弟类继承了师父类，B是A的子类
    pass

# 3. 实例化对象，需要徒弟继承师父的技术
tom = B()               # 通过类创建对象
print(tom.jishu)
tom.info_print()            # tom可以去调用属性和方法，因为徒弟类继承了师父类










